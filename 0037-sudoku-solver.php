<?php

class Solution 
{
//     NOT MY 
    
        private function dfs(int $row, int $col, array &$rows, array &$cols, array &$sections, array &$board, bool &$finished)
        {
                if($row == 9)
                {
                        $finished = true;
                        return;
                }
                if($board[$row][$col] != '.')
                {
                        $this->dfs($row+floor(($col+1)/9), ($col+1)%9, $rows, $cols, $sections, $board, $finished);
                        return;
                }

                for($i=1; $i<=9; $i++)
                {
                        if($rows[$row][$i] == 1 || $cols[$col][$i] == 1)
                                continue;
                        if($sections[3*floor($row/3) + floor($col/3)][$i] == 1)
                                continue;
                        
                        $board[$row][$col] = strval($i);
                        $rows[$row][$i] = 1;
                        $cols[$col][$i] = 1;
                        $sections[3*floor($row/3) + floor($col/3)][$i] = 1;
                        
                        $this->dfs($row+floor(($col+1)/9), ($col+1)%9, $rows, $cols, $sections, $board, $finished);
                        if($finished)
                                return;
                        
                        $sections[3*floor($row/3) + floor($col/3)][$i] = 0;
                        $cols[$col][$i] = 0;
                        $rows[$row][$i] = 0;
                        $board[$row][$col] = '.';
                }
                
        }
        /**
        * @param String[][] $board
        * @return NULL
        */
        function solveSudoku(&$board) 
        {
                /* Track the initial population. */
                $rows = [];
                $cols = [];
                $sections = [];
                for($i=0; $i<9; $i++)
                {
                        $rows[] = array_fill(1,9,0);
                        $cols[] = array_fill(1,9,0);
                        $sections[] = array_fill(1,9,0);
                }

                for($i=0; $i<9; $i++)
                {
                        for($j=0; $j<9; $j++)
                        {
                                $cell = $board[$i][$j];
                                if($cell == '.')
                                        continue;
                                $cell = intval($cell);
                                $rows[$i][$cell] = 1;
                                $cols[$j][$cell] = 1;
                                $sections[3*floor($i/3) + floor($j/3)][$cell] = 1;
                        }
                }
                $finished = false;
                $this->dfs(0, 0, $rows, $cols, $sections, $board, $finished);
        }
}

$boardA = [["5","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]];
$boardB = [[".",".","9","7","4","8",".",".","."],["7",".",".",".",".",".",".",".","."],[".","2",".","1",".","9",".",".","."],[".",".","7",".",".",".","2","4","."],[".","6","4",".","1",".","5","9","."],[".","9","8",".",".",".","3",".","."],[".",".",".","8",".","3",".","2","."],[".",".",".",".",".",".",".",".","6"],[".",".",".","2","7","5","9",".","."]];
$boardC = [[".",".","9","7","4","8",".",".","."],["7",".",".",".",".",".",".",".","."],[".","2",".","1",".","9",".",".","."],[".",".","7",".",".",".","2","4","."],[".","6","4",".","1",".","5","9","."],[".","9","8",".",".",".","3",".","."],[".",".",".","8",".","3",".","2","."],[".",".",".",".",".",".",".",".","6"],[".",".",".","2","7","5","9",".","."]];
$boardD = [[".",".",".","2",".",".",".","6","3"],["3",".",".",".",".","5","4",".","1"],[".",".","1",".",".","3","9","8","."],[".",".",".",".",".",".",".","9","."],[".",".",".","5","3","8",".",".","."],[".","3",".",".",".",".",".",".","."],[".","2","6","3",".",".","5",".","."],["5",".","3","7",".",".",".",".","8"],["4","7",".",".",".","1",".",".","."]];
$boardE = [[".",".","9","7","4","8",".",".","."],["7",".",".",".",".",".",".",".","."],[".","2",".","1",".","9",".",".","."],[".",".","7",".",".",".","2","4","."],[".","6","4",".","1",".","5","9","."],[".","9","8",".",".",".","3",".","."],[".",".",".","8",".","3",".","2","."],[".",".",".",".",".",".",".",".","6"],[".",".",".","2","7","5","9",".","."]];

$board = $boardD;

foreach ($board as $row) {
    echo( implode(' ', $row) . "\r\n" );
}
echo( "\r\n" );
(new Solution())->solveSudoku($board);
foreach ($board as $row) {
    echo( implode(' ', $row) . "\r\n" );
}
// var_dump($board);